---

setup:
  addons:
    - plan: heroku-postgresql
      as: DATABASE
      # as: HEROKU_POSTGRESQL_RED
      # as: HEROKU_POSTGRESQL_BLACK

  config:
    # NODE_ENV: production
    # USER_DB: $USER_DB
    # ORDER_DB: $ORDER_DB
    PRODUCT_DB: $PRODUCT_DB

    APP_NAME: debby-hand-knits


# networks:
#   order-network:
#     driver: bridge


build:
  docker:
    web: backend-product_service/Dockerfile
    # web: frontend-service/Dockerfile
    # users: backend-user_service/Dockerfile
    # products: backend-product_service/Dockerfile
    orders: backend-order_service/Dockerfile

  config:
    # NODE_ENV: production
    # USER_DB: $USER_DB
    # ORDER_DB: $ORDER_DB
    PRODUCT_DB: $PRODUCT_DB
    PORT: :$PORT

  # networks:
  #   - order-network


# run:
    # web: docker-compose -f docker-compose.deploy.yml up -d
    # web: npm start
    # image:
    #   command:
    #     - python app/add_products.py
    #     image:
    #       products

  # # run:
  #   web: bundle exec puma -C config/puma.rb
  #   worker: python myworker.py
  #   asset-syncer:
  #     command:
  #       - python asset-syncer.py
  #       # Use the worker image with this process type
  #       image: worker